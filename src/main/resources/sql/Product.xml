<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.keyboard.repository.ProductDao">
    <!--  상품 등록  -->
    <insert id="insertProduct">
        INSERT INTO product(name, type)
        VALUES(#{name}, #{type})
    </insert>
    <!--  상품 카테고리 등록  -->
    <insert id ="insertProductCategory" parameterType="map">
        INSERT INTO productcategory(product_id, category_name, category_state)
        VALUES (#{product_id}, #{category_name}, #{category_state})
    </insert>
    <!--  상세 상품 등록  -->
    <insert id ="insertProductDetail" parameterType="ProductDetailEntity">
        INSERT INTO productdetail(product_id, product_category_id, name, amount, stock, default_state)
        VALUES (#{product_id}, #{product_category_id}, #{name}, #{amount}, #{stock}, #{default_state})
    </insert>

    <!--  등록한 상품 가져오기  -->
    <select id="selectAllProductList" resultType="ProductEntity">
        SELECT * FROM product WHERE isdelete = 0;
    </select>
    <!--  productId로 해당 상품 가져오기  -->
    <select id="selectProductById" resultType="ProductEntity">
        SELECT * FROM product WHERE product_id = #{product_id} AND isdelete = 0;
    </select>
    <!--  이름으로 상품 상품 번호 가져오기  -->
    <select id="selectProductIdByName" resultType="Long">
        SELECT * FROM product WHERE name = #{name} AND isdelete = 0;
    </select>
    <!--  해당 상품에 대한 이미지 리스트 가져오기  -->
    <select id="selectProductImages" parameterType="Long" resultType="ImageEntity">
        SELECT * FROM productpicture WHERE product_id = #{product_id};
    </select>
    <!--  메인으로 등록된 상품 가져오기  -->
    <select id="selectMainProduct" resultType="ProductEntity">
        SELECT * FROM product WHERE main_pic_state = 1 AND isdelete = 0;
    </select>
    <!--  해당 상품의 상세 상품 가져오기  -->
    <select id="selectProductDetailList" parameterType="Long"  resultType="ProductDetailEntity">
        SELECT * FROM productdetail WHERE product_id = #{product_id} AND isdelete = 0;
    </select>
    <!--  해당 카테고리의 상세 상품 가져오기  -->
    <select id="selectProductDetailByCategory" parameterType="Long"  resultType="ProductDetailEntity">
        SELECT * FROM productdetail WHERE product_category_id = #{product_category_id} AND isdelete = 0;
    </select>
    <!--  상세 상품 가져오기  -->
    <select id="selectProductDetail" parameterType="Long"  resultType="ProductDetailEntity">
        SELECT * FROM productdetail WHERE product_detail_id = #{product_detail_id} AND isdelete = 0;
    </select>
    <!--  모든 상세 상품 가져오기  -->
    <select id="selectAllProductDetailList" resultType="ProductDetailEntity">
        SELECT * FROM productdetail WHERE isdelete = 0;
    </select>
    <!--  상세 상품 카테고리 가져오기  -->
    <select id="selectProductCategory" parameterType="Long"  resultType="ProductDetailEntity">
        SELECT * FROM productcategory WHERE product_category_id = #{product_category_id} AND isdelete = 0;
    </select>
    <!--  상세 상품 카테고리 가져오기  -->
    <select id="selectCategoryByProductId" parameterType="Long"  resultType="ProductDetailEntity">
        SELECT * FROM productcategory WHERE product_id = #{product_id} AND isdelete = 0;
    </select>
    <!--  상품과 카테고리가 같은 상세 상품 리스트 가져오기  -->
    <select id="selectSameCategoryDetailList" resultType="ProductDetailEntity">
        SELECT * FROM productdetail WHERE product_id = #{product_id} AND product_category_id = #{product_category_id} AND isdelete = 0;
    </select>
    <!--  해당 상품 카테고리의 category_state 가져오기  -->
    <select id="selectDetailCategoryState" resultType="int">
        SELECT category_state FROM productcategory WHERE product_id = #{product_id} AND product_category_id = #{product_category_id} AND isdelete = 0;
    </select>
    <!--  상세 상품의 가격 가져오기  -->
    <select id="selectProductDetailAmount" resultType="int">
        SELECT amount FROM productdetail WHERE product_detail_id = #{product_detail_id} AND isdelete = 0;
    </select>

    <!--  상품 수정하기  -->
    <update id="updateProduct" parameterType="ProductEntity">
        UPDATE product
        SET name = #{name},
            type = #{type}
        WHERE product_id = #{product_id} AND isdelete = 0;
    </update>

    <!--  상품 카테고리 수정하기  -->
    <update id="updateProductCategory">
        UPDATE productcategory
        SET category_name = #{category_name}
        WHERE product_id = #{product_id} AND product_category_id = #{product_category_id} AND isdelete = 0;
    </update>

    <!--  상세 상품 수정하기  -->
    <update id="updateProductDetail">
        UPDATE productdetail
        SET name = #{name},
            amount = #{amount},
            stock = #{stock}
        WHERE product_detail_id = #{product_detail_id} AND isdelete = 0;
    </update>

    <!--  상세 상품의 기본 값 가격 상품 가격에 추가하기   -->
   <update id="updateProductAmount">
        UPDATE product
        SET amount = amount + #{amount}
        WHERE product_id = #{product_id} AND isdelete = 0;
    </update>





    <!--  상세 상품 기본 값 세팅  -->
    <update id="updateProductDefault">
        UPDATE productdetail
        SET default_state = IF(default_state = 0, 1, 0)
        WHERE product_detail_id = #{product_detail_id} AND isdelete = 0;
    </update>
    <!--  카테고리 기본 값 세팅  -->
    <update id="updateCategoryDefault">
        UPDATE productcategory
        SET category_state = IF(category_state = 0, 1, 0)
        WHERE product_category_id = #{product_category_id} AND isdelete = 0;
    </update>
    <!--  상품 메인 사진 STATE, IMG 세팅  -->
    <update id="insertMainPic">
        UPDATE product
        SET main_picture = #{main_pic_path}, main_pic_state = #{main_pic_state}
        WHERE product_id = #{product_id} AND isdelete = 0;
    </update>

    <!--  이름 존재 여부 확인하기  -->
    <select id="isProductNameExists" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM product WHERE name = #{name} AND isdelete = 0;
    </select>
    <select id="isDetailNameExists" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM productdetail WHERE name = #{name} AND product_id = #{product_id} AND isdelete = 0;
    </select>
    <select id="isCategoryNameExists" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM productcategory WHERE category_name = #{category_name} AND product_id = #{product_id} AND isdelete = 0;
    </select>


    <!--  이름 가져오기 -->
    <select id="selectProductName" parameterType="Long" resultType="String">
        SELECT name FROM product WHERE product_id = #{product_id} AND isdelete = 0;
    </select>
    <select id="selectCategoryName" parameterType="Long" resultType="String">
        SELECT category_name FROM productcategory WHERE product_category_id = #{product_category_id} AND isdelete = 0;
    </select>
    <select id="selectProductDetailName" parameterType="Long" resultType="String">
        SELECT name FROM productdetail WHERE product_detail_id = #{product_detail_id} AND isdelete = 0;
    </select>



    <update id="deleteProduct">
        UPDATE product
        SET isdelete = 1
        WHERE product_id = #{product_id}
    </update>
    <update id="deleteCategory">
        UPDATE productcategory
        SET isdelete = 1
        WHERE product_category_id = #{product_category_id}
    </update>
    <update id="deleteProductDetail">
        UPDATE productdetail
        SET isdelete = 1
        WHERE product_detail_id = #{product_detail_id}
    </update>

<!--    <delete id="deleteProduct" parameterType="Long">-->
<!--        DELETE from product where product_id = #{product_id}-->
<!--    </delete>-->
<!--    <delete id="deleteCategory" parameterType="Long">-->
<!--        DELETE from productcategory where product_category_id = #{product_category_id}-->
<!--    </delete>-->
<!--    <delete id="deleteProductDetail" parameterType="Long">-->
<!--        DELETE from productdetail where product_detail_id = #{product_detail_id}-->
<!--    </delete>-->
</mapper>